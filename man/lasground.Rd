% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lasground.r
\name{lasground}
\alias{lasground}
\title{Classify points as ground or not ground}
\usage{
lasground(las, algorithm, last_returns = TRUE)
}
\arguments{
\item{las}{An object of class \link[lidR:LAS-class]{LAS} or \link[lidR:LAScatalog-class]{LAScatalog}.}

\item{algorithm}{a ground segmentation function. \code{lidR} have: \link{pmf} and \link{csf}}

\item{last_returns}{logical. The algorithm will use only the last returns (including the first returns
in the cases of single return) to run the algorithm. If FALSE all the returns are used. If the attribute
\code{'ReturnNumber'} or \code{'NumberOfReturns'} are not specified \code{'last_returns'} is turned
to \code{FALSE} automatically.}
}
\description{
Classify points as ground or not ground with several possible algorithms. The function updates the
attribute \code{Classification} of the LAS object. The points classified as 'ground' are assigned
a value of 2 according to \href{http://www.asprs.org/a/society/committees/standards/LAS_1_4_r13.pdf}{las specifications}).
}
\section{Working with a \code{LAScatalog}}{

This section appears in each function that supports a LAScatalog as input.\cr

In \code{lidR} when the input of a function is a \link[lidR:LAScatalog-class]{LAScatalog} the
functions uses the LAScatalog processing engine. The user can modify the engine options using
the \link[lidR:catalog_options_tools]{available options}. A careful read of the
\link[lidR:LAScatalog-class]{engine documentation} is recommended to process \code{LAScatalogs}. Each
\code{lidR} function should come with a section that document the supported engine options.\cr

\code{LAScatalog} engine supports \code{.lax} files that \emph{significantly} improve the computation
speed of spatial queries using a spatial index. Users should really take advange a \code{.lax} files
but this is not mandatory.
}

\section{Supported processing options}{

Supported processing options for a \code{LAScatalog} (in bold). For more details see the
\link[lidR:LAScatalog-class]{LAScatalog engine documentation}:
\itemize{
\item \strong{tiling_size}: How many data are loaded at once.
\item \strong{buffer*}: Mandatory to get a continuous output without edge effect. The buffer is
always removed once processed and will never be returned neither in R nor in files.
\item \strong{alignment}: Align the processed clusters
\item \strong{cores}: How many cores are used. More cores means more data loaded at once.
\item \strong{progress}: Displays a progression estimation.
\item \strong{output_files*}: Mandatory because the output is likely to be too big to be returned
 in R and needs to be written in las/laz files. Supported templates are \code{\{XLEFT\}}, \code{\{XRIGHT\}},
\code{\{YBOTTOM\}}, \code{\{YTOP\}}, \code{\{XCENTER\}}, \code{\{YCENTER\}} \code{\{ID\}} and, if tiling size equal to 0
(processing by file), \code{\{ORIGINALFILENAME\}}.
\item \strong{laz_compression}: write \code{las} or \code{laz} files
\item select: The function will write file equivalent to the original ones. Thus \code{select = "*"}
and cannot be changed.
\item \strong{filter}: Read only points of interest.
}
}

\examples{
LASfile <- system.file("extdata", "Topography.laz", package="lidR")

# Using the Progressive Morphological Filter
# --------------------------------------

las = readLAS(LASfile, select = "xyzrn")

ws = seq(3,12, 3)
th = seq(0.1, 1.5, length.out = length(ws))

lasground(las, pmf(ws, th))
plot(las, color = "Classification")

# Using the Cloth Simulation Filter
# --------------------------------------

las = readLAS(LASfile, select = "xyzrn")

lasground(las, csf())
}
