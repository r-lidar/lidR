% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid_hexametrics.r
\name{grid_hexametrics}
\alias{grid_hexametrics}
\title{Area Based Approach in hexagonal cells.}
\usage{
grid_hexametrics(las, func, res = 20)
}
\arguments{
\item{las}{An object of class \code{LAS}}

\item{func}{the function to be applied to each hexagonal cell}

\item{res}{numeric. To be consistent with \link{grid_metrics} the square of \code{res} give the area
of the hexagonal cells like in \code{grid_metrics}. The difference being the fact that for square pixels this
is obvious. Here \code{res = 20} gives 400 square meters hexagonal cells.}
}
\value{
An \link[hexbin:hexbin-class]{hexbin} object from package \code{hexbin} or a \code{list} of
\code{hexbin} objects if several metrics are returned.
}
\description{
Computes a series of descriptive statistics for a LiDAR dataset within hexagonal cells
This function is identical to \link{grid_metrics} but with hexagonal cells instead of classical
square pixels. After all we make circular plot inventories and we map models on pixel-based maps.
\code{grid_hexametrics} provide the opportunity to test somthing else. Refer to \link{grid_metrics}
for more information.
}
\examples{
LASfile <- system.file("extdata", "Megaplot.laz", package="lidR")
lidar = readLAS(LASfile)

col = grDevices::colorRampPalette(c("blue", "cyan2", "yellow", "red"))

# Maximum elevation with a resolution of 8 m
hm = grid_hexametrics(lidar, max(Z), 8)
hexbin::plot(hm, colramp = col, main = "Max Z")

# Mean height with a resolution of 20 m
hm = grid_hexametrics(lidar, mean(Z), 20)
hexbin::plot(hm, colramp = col, main = "Mean Z")

# Define your own new metrics
myMetrics = function(z, i)
{
  metrics = list(
    zwimean = sum(z*i)/sum(i), # Mean elevation weighted by intensities
    zimean  = mean(z*i),       # Mean products of z by intensity
  zsqmean = sqrt(mean(z^2))  # Quadratic mean
  )

  return(metrics)
}

metrics = grid_hexametrics(lidar, myMetrics(Z, Intensity), 10)

hexbin::plot(metrics$zwimean, colramp = col, main = "zwimean")
hexbin::plot(metrics$zimean, colramp = col, main = "zimean")
hexbin::plot(metrics$zsqmean, colramp = col, main = "zsqmean")
}
